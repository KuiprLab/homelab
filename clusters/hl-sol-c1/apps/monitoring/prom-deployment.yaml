apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1h
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.8.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-charts
        namespace: monitoring
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  
  dependsOn:
    - name: grafana
      namespace: monitoring
  
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics
      valuesKey: kube-state-metrics.yaml
  
  values:
    # Disable built-in Grafana since we deploy it separately
    grafana:
      enabled: false

    # Prometheus configuration
    prometheus:
      enabled: true
      prometheusSpec:
        # Remove secrets reference if not needed
        # secrets:
        #   - etcd-client-cert
        
        retention: 30d
        retentionSize: "10GB"
        
        # Fix storage configuration
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteOnce"]  # Changed from ReadWriteMany
              resources:
                requests:
                  storage: 15Gi
        
        # Service monitor configuration
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        
        # Security context - simplified
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          fsGroup: 65534
        
        # Remove problematic init container
        # initContainers: []
        
        # Resource limits
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi

      # Ingress configuration
      ingress:
        enabled: false  # We'll use IngressRoute instead

    # Alertmanager configuration
    alertmanager:
      enabled: true
      
      ingress:
        enabled: false  # We'll use IngressRoute instead

      alertmanagerSpec:
        replicas: 1
        retention: 2160h # 90 Days
        
        # Fix storage configuration
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteOnce"]  # Changed from ReadWriteMany
              resources:
                requests:
                  storage: 1Gi
        
        # Resource limits
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

      # Alertmanager configuration
      config:
        global:
          resolve_timeout: 5m
        
        route:
          receiver: "null"
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          routes:
            - matchers:
                - severity =~ "^(warning|critical)$"
              receiver: discord
        
        receivers:
          - name: "null"
          - name: discord
            discord_configs:
              - webhook_url_file: /etc/alertmanager/secrets/discord-webhook/webhook-url
                title: |
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.alertname }}
                message: |
                  {{ range .Alerts }}
                  **Alert:** {{ .Labels.alertname }}
                  **Severity:** {{ .Labels.severity }}
                  {{ if .Annotations.summary }}**Summary:** {{ .Annotations.summary }}{{ end }}
                  {{ if .Annotations.description }}**Description:** {{ .Annotations.description }}{{ end }}
                  {{ end }}

    # Kube-state-metrics configuration
    kube-state-metrics:
      enabled: true

    # Node exporter configuration  
    nodeExporter:
      enabled: true

    # Prometheus operator configuration
    prometheusOperator:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi

    # Default rules configuration
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: false  # Disable if not monitoring etcd
        configReloaders: true
        general: true
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
