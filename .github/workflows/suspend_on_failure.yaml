name: Suspend on Validation Failure

on:
  workflow_run:
    workflows: ["Validate and Protect Flux Resources"]
    types:
      - completed

jobs:
  suspend-reconciliation:
    runs-on: ubuntu-latest
    # Only run when the validation workflow fails and when it was triggered by a push event
    # This prevents a loop where this workflow runs after its own failures
    if: |
      github.event.workflow_run.conclusion == 'failure' && 
      github.event.workflow_run.event == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          token: ${{ secrets.FLUX_GITHUB_TOKEN }}
      
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
      
      - name: Create suspension commit
        run: |
          echo "Validation failed in previous workflow run, creating suspension markers"
          
          # Configure git
          git config --global user.name "Flux Validator"
          git config --global user.email "flux-validator@users.noreply.github.com"
          
          # Create a new branch
          BRANCH_NAME="fix/suspend-after-validation-failure-$(date +%s)"
          git checkout -b "$BRANCH_NAME"
          
          # Add suspension markers
          find ./clusters -type f -name "*.yaml" | grep -v "flux-system" | while read -r file; do
            if grep -q "kind: Kustomization" "$file"; then
              NAME=$(yq e '.metadata.name' "$file")
              NAMESPACE=$(yq e '.metadata.namespace' "$file")
              
              if [ -n "$NAME" ] && [ -n "$NAMESPACE" ]; then
                echo "Adding suspension marker for Kustomization $NAMESPACE/$NAME"
                DIR=$(dirname "$file")
                echo "# FLUX_SUSPEND: Suspended due to validation failure at $(date)" > "$DIR/.flux-suspend"
                git add "$DIR/.flux-suspend"
              fi
            fi
          done
          
          # Commit changes if any files were modified
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "ci: suspend kustomizations after validation failure"
            git push origin "$BRANCH_NAME"
            
            # Create PR notification using GitHub CLI
            PR_BODY="## Validation Failure Detected
          This PR was automatically created because the validation workflow failed.

          To prevent invalid resources from being applied to your cluster, Flux reconciliation markers have been added to suspend the affected kustomizations.

          ### Next Steps
          1. Review the validation errors in the workflow logs
          2. Fix the issues in a separate PR
          3. Close this PR without merging when the fixes are deployed

          **Do not merge this PR unless you want to temporarily suspend all Flux reconciliation.**"
            
            gh pr create \
              --title "⚠️ Emergency suspension of Flux reconciliation" \
              --body "$PR_BODY" \
              --base "${GITHUB_REF#refs/heads/}" \
              --head "$BRANCH_NAME"
          fi
        env:
          GH_TOKEN: ${{ secrets.FLUX_GITHUB_TOKEN }}
