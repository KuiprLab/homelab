name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  flux-check:
    name: Flux Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Flux CLI
        uses: fluxcd/flux2/action@main
      
      - name: Validate Flux resources
        run: |
          find ./clusters -type f -name "*.yaml" -print0 | while IFS= read -r -d $'\0' file; do
            echo "Validating $file"
            if [[ "$file" == *"kustomization.yaml" ]]; then
              # Skip kustomization files
              continue
            fi
            # Only validate files that seem to be Flux resources
            if grep -q "toolkit.fluxcd.io" "$file"; then
              flux validate --silent "$file" || echo "::warning file=$file::Validation failed"
            fi
          done
  
  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0
          
      - name: Run helm lint
        run: |
          find . -path "*/chart/*" -type d -print0 | while IFS= read -r -d $'\0' chart_dir; do
            if [ -f "$chart_dir/Chart.yaml" ]; then
              echo "Linting Helm chart in $chart_dir"
              helm lint "$chart_dir"
            fi
          done

  kubeval:
    name: Kubeval
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install kubeval
        run: |
          wget -q https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin
          
      - name: Run kubeval
        run: |
          find ./clusters -type f -name "*.yaml" -print0 | while IFS= read -r -d $'\0' file; do
            if [[ "$file" == *"kustomization.yaml" || "$file" == *"flux-system"* ]]; then
              # Skip kustomization and flux-system files
              continue
            fi
            echo "Validating $file"
            kubeval --ignore-missing-schemas --strict "$file" || echo "::warning file=$file::Validation failed"
          done
